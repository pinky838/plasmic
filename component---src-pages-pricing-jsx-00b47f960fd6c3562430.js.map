{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__Done24Pxsvg2.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicBullet.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicBullet.module.css","webpack://gatsby-starter-default/./src/components/Bullet.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicBaseCard.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicBaseCard.module.css","webpack://gatsby-starter-default/./src/components/BaseCard.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicPlan.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicPlan.module.css","webpack://gatsby-starter-default/./src/components/Plan.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicFaq.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicFaq.module.css","webpack://gatsby-starter-default/./src/components/Faq.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicPricing.module.css","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicPricing.jsx","webpack://gatsby-starter-default/./src/pages/pricing.jsx"],"names":["props","className","style","title","restProps","xmlns","viewBox","height","width","fill","classNames","d","PlasmicBullet__VariantProps","Array","PlasmicBullet__ArgProps","PlasmicDescendants","root","svg","makeNodeComponent","nodeName","func","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","dataFetches","as","data-plasmic-name","data-plasmic-override","data-plasmic-root","data-plasmic-for-node","hasGap","defaultcss","projectcss","role","p","defaultContents","value","children","PlasmicBullet__RenderFunc","displayName","PlasmicBullet","Object","assign","internalVariantProps","internalArgProps","Bullet_","ref","React","PlasmicBaseCard__VariantProps","PlasmicBaseCard__ArgProps","PlasmicBaseCard","hasVariant","iconBack","PlasmicBaseCard__RenderFunc","BaseCard_","PlasmicPlan__VariantProps","PlasmicPlan__ArgProps","PlasmicPlan","price","Bullet","description","LinkButton","text","type","PlasmicPlan__RenderFunc","PlasmicFaq__VariantProps","PlasmicFaq__ArgProps","PlasmicFaq","slot","PlasmicFaq__RenderFunc","box__kRBjL","header","section__fMhyy","box___3XQr","plan__cDp3V","box__qzuZp","plan__p0H0H","box__vGuuf","box__jB1Qj","bullet__uITfA","bullet__uwzgi","bullet___9OVeN","bullet__sa7N","plan__aiSwE","box__lFwGu","section__kPtnn","faq___7E9Fd","faq___1Yqso","faq__k8AUp","footer","PlasmicPricing__VariantProps","PlasmicPricing__ArgProps","ensureGlobalVariants","screen","useScreenVariants","sty","Header","Section","subtitle","Footer","PlasmicPricing__RenderFunc","PlasmicPricing"],"mappings":"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","file":"component---src-pages-pricing-jsx-00b47f960fd6c3562430.js","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Done24Pxsvg2Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path d={\"M0 0h24v24H0z\"} fill={\"none\"}></path>\n\n      <path d={\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"}></path>\n    </svg>\n  )\n}\n\nexport default Done24Pxsvg2Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: j5vejMQNKZgqgWtrVNkPjM\n// Component: BdWMeaFQYwVmJ2\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: j5vejMQNKZgqgWtrVNkPjM/projectcss\nimport * as sty from \"./PlasmicBullet.module.css\" // plasmic-import: BdWMeaFQYwVmJ2/css\nimport Done24Pxsvg2Icon from \"./icons/PlasmicIcon__Done24Pxsvg2\" // plasmic-import: LvmnTYXjfQEU51/icon\n\nexport const PlasmicBullet__VariantProps = new Array()\n\nexport const PlasmicBullet__ArgProps = new Array(\"children\")\n\nfunction PlasmicBullet__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}\n    >\n      <Done24Pxsvg2Icon\n        data-plasmic-name={\"svg\"}\n        data-plasmic-override={overrides.svg}\n        className={classNames(defaultcss.all, sty.svg)}\n        role={\"img\"}\n      />\n\n      {p.renderPlasmicSlot({\n        defaultContents: \"Lorem ipsum dolor velit\",\n        value: args.children,\n      })}\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"svg\"],\n  svg: [\"svg\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicBullet__ArgProps,\n      internalVariantPropNames: PlasmicBullet__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicBullet__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicBullet\"\n  } else {\n    func.displayName = `PlasmicBullet.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicBullet = Object.assign(\n  // Top-level PlasmicBullet renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    svg: makeNodeComponent(\"svg\"),\n    // Metadata about props expected for PlasmicBullet\n    internalVariantProps: PlasmicBullet__VariantProps,\n    internalArgProps: PlasmicBullet__ArgProps,\n  }\n)\n\nexport default PlasmicBullet\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicBullet-module--root--2m8c8\";\nexport var svg = \"PlasmicBullet-module--svg--1ZvCg\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicBullet } from \"./plasmic/simple_light_landing_page/PlasmicBullet\"\n\nfunction Bullet_(props, ref) {\n  // Use PlasmicBullet to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicBullet are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all BulletProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicBullet root={{ ref }} {...props} />\n}\n\nconst Bullet = React.forwardRef(Bullet_)\n\nexport default Bullet\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: j5vejMQNKZgqgWtrVNkPjM\n// Component: RKnJ7W6SQceBXS\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: j5vejMQNKZgqgWtrVNkPjM/projectcss\nimport * as sty from \"./PlasmicBaseCard.module.css\" // plasmic-import: RKnJ7W6SQceBXS/css\n\nexport const PlasmicBaseCard__VariantProps = new Array(\"long\")\n\nexport const PlasmicBaseCard__ArgProps = new Array(\"children\", \"iconBack\")\n\nfunction PlasmicBaseCard__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(defaultcss.all, projectcss.root_reset, sty.root, {\n        [sty.root__long]: hasVariant(variants, \"long\", \"long\"),\n      })}\n    >\n      <div\n        className={classNames(defaultcss.all, sty.box__fzWf, {\n          [sty.box__long__fzWfZtEkS]: hasVariant(variants, \"long\", \"long\"),\n        })}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n          value: args.children,\n          className: classNames(sty.slotChildren, {\n            [sty.slotChildren__long]: hasVariant(variants, \"long\", \"long\"),\n          }),\n        })}\n      </div>\n\n      {(hasVariant(variants, \"long\", \"long\") ? true : false) ? (\n        <div\n          className={classNames(defaultcss.all, sty.box__wlQde, {\n            [sty.box__long__wlQdEztEkS]: hasVariant(variants, \"long\", \"long\"),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <svg\n                className={classNames(defaultcss.all, sty.svg__dtfN2)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.iconBack,\n          })}\n        </div>\n      ) : null}\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicBaseCard__ArgProps,\n      internalVariantPropNames: PlasmicBaseCard__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicBaseCard__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicBaseCard\"\n  } else {\n    func.displayName = `PlasmicBaseCard.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicBaseCard = Object.assign(\n  // Top-level PlasmicBaseCard renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicBaseCard\n    internalVariantProps: PlasmicBaseCard__VariantProps,\n    internalArgProps: PlasmicBaseCard__ArgProps,\n  }\n)\n\nexport default PlasmicBaseCard\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicBaseCard-module--root--1zPAV\";\nexport var root__long = \"PlasmicBaseCard-module--root__long--2kAzV\";\nexport var box__fzWf = \"PlasmicBaseCard-module--box__fzWf--1yAcu\";\nexport var box__long__fzWfZtEkS = \"PlasmicBaseCard-module--box__long__fzWfZtEkS--3IHkd\";\nexport var slotChildren = \"PlasmicBaseCard-module--slotChildren--1N2CK\";\nexport var slotChildren__long = \"PlasmicBaseCard-module--slotChildren__long--3afQk\";\nexport var box__wlQde = \"PlasmicBaseCard-module--box__wlQde--gM_q9\";\nexport var box__long__wlQdEztEkS = \"PlasmicBaseCard-module--box__long__wlQdEztEkS--1cWFe\";\nexport var svg__dtfN2 = \"PlasmicBaseCard-module--svg__dtfN2--MzGtQ\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicBaseCard } from \"./plasmic/simple_light_landing_page/PlasmicBaseCard\"\n\nfunction BaseCard_(props, ref) {\n  // Use PlasmicBaseCard to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicBaseCard are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all BaseCardProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicBaseCard root={{ ref }} {...props} />\n}\n\nconst BaseCard = React.forwardRef(BaseCard_)\n\nexport default BaseCard\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: j5vejMQNKZgqgWtrVNkPjM\n// Component: IOeU_a7_G01jmo\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport BaseCard from \"../../BaseCard\" // plasmic-import: RKnJ7W6SQceBXS/component\nimport Bullet from \"../../Bullet\" // plasmic-import: BdWMeaFQYwVmJ2/component\nimport LinkButton from \"../../LinkButton\" // plasmic-import: ncDRo3MeKjAtr/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as sty from \"./PlasmicPlan.module.css\" // plasmic-import: IOeU_a7_G01jmo/css\n\nexport const PlasmicPlan__VariantProps = new Array()\n\nexport const PlasmicPlan__ArgProps = new Array(\n  \"price\",\n  \"name\",\n  \"description\",\n  \"children\"\n)\n\nfunction PlasmicPlan__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <BaseCard\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\"__wab_instance\", sty.root)}\n    >\n      <div className={classNames(defaultcss.all, sty.box__tI40O)}>\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(defaultcss.all, sty.box__gyZu3)}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: \"Basic\",\n            value: args.name,\n            className: classNames(sty.slotName),\n          })}\n\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <div\n                className={classNames(\n                  defaultcss.all,\n                  defaultcss.__wab_text,\n                  sty.box__fvPOf\n                )}\n              >\n                {\"$10\"}\n              </div>\n            ),\n\n            value: args.price,\n          })}\n\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(defaultcss.all, sty.box__c05Ne)}\n              >\n                <Bullet\n                  className={classNames(\"__wab_instance\", sty.bullet__vfnbG)}\n                />\n\n                <Bullet\n                  className={classNames(\"__wab_instance\", sty.bullet___4QBfm)}\n                />\n\n                <Bullet\n                  className={classNames(\"__wab_instance\", sty.bullet__b5Jgc)}\n                />\n              </p.Stack>\n            ),\n\n            value: args.description,\n          })}\n\n          <div className={classNames(defaultcss.all, sty.box___5HIf7)}>\n            {p.renderPlasmicSlot({\n              defaultContents: (\n                <LinkButton text={\"Get started\"} type={\"outlineBlue\"} />\n              ),\n\n              value: args.children,\n            })}\n          </div>\n        </p.Stack>\n      </div>\n    </BaseCard>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicPlan__ArgProps,\n      internalVariantPropNames: PlasmicPlan__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicPlan__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicPlan\"\n  } else {\n    func.displayName = `PlasmicPlan.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicPlan = Object.assign(\n  // Top-level PlasmicPlan renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicPlan\n    internalVariantProps: PlasmicPlan__VariantProps,\n    internalArgProps: PlasmicPlan__ArgProps,\n  }\n)\n\nexport default PlasmicPlan\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicPlan-module--root--27EcQ\";\nexport var box__tI40O = \"PlasmicPlan-module--box__tI40O--3_Nyh\";\nexport var box__gyZu3 = \"PlasmicPlan-module--box__gyZu3--1nDJf\";\nexport var slotName = \"PlasmicPlan-module--slotName--1clZ5\";\nexport var box__fvPOf = \"PlasmicPlan-module--box__fvPOf--3r5JP\";\nexport var box__c05Ne = \"PlasmicPlan-module--box__c05Ne--11oH4\";\nexport var bullet__vfnbG = \"PlasmicPlan-module--bullet__vfnbG--LaiPj\";\nexport var bullet___4QBfm = \"PlasmicPlan-module--bullet___4QBfm--3bdB_\";\nexport var bullet__b5Jgc = \"PlasmicPlan-module--bullet__b5Jgc--2cRYT\";\nexport var box___5HIf7 = \"PlasmicPlan-module--box___5HIf7--19B_x\";\nexport var svg___7XxrC = \"PlasmicPlan-module--svg___7XxrC--13iyC\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicPlan } from \"./plasmic/simple_light_landing_page/PlasmicPlan\"\n\nfunction Plan(props) {\n  // Use PlasmicPlan to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicPlan are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all PlanProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicPlan {...props} />\n}\n\nexport default Plan\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: j5vejMQNKZgqgWtrVNkPjM\n// Component: -5lw5HDpGbQ5Lb\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport BaseCard from \"../../BaseCard\" // plasmic-import: RKnJ7W6SQceBXS/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as sty from \"./PlasmicFaq.module.css\" // plasmic-import: -5lw5HDpGbQ5Lb/css\n\nexport const PlasmicFaq__VariantProps = new Array()\n\nexport const PlasmicFaq__ArgProps = new Array(\"children\", \"slot\")\n\nfunction PlasmicFaq__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <BaseCard\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\"__wab_instance\", sty.root)}\n    >\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(defaultcss.all, sty.box__bgFry)}\n      >\n        <div className={classNames(defaultcss.all, sty.box___5Eaxt)}>\n          <div className={classNames(defaultcss.all, sty.box__xfa6K)}>\n            {p.renderPlasmicSlot({\n              defaultContents: \"Are there long-term contracts?\",\n              value: args.children,\n              className: classNames(sty.slotChildren),\n            })}\n          </div>\n        </div>\n\n        {p.renderPlasmicSlot({\n          defaultContents:\n            \"Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\",\n          value: args.slot,\n          className: classNames(sty.slotSlot),\n        })}\n      </p.Stack>\n    </BaseCard>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicFaq__ArgProps,\n      internalVariantPropNames: PlasmicFaq__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicFaq__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicFaq\"\n  } else {\n    func.displayName = `PlasmicFaq.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicFaq = Object.assign(\n  // Top-level PlasmicFaq renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicFaq\n    internalVariantProps: PlasmicFaq__VariantProps,\n    internalArgProps: PlasmicFaq__ArgProps,\n  }\n)\n\nexport default PlasmicFaq\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicFaq-module--root--3wWsb\";\nexport var box__bgFry = \"PlasmicFaq-module--box__bgFry--16clX\";\nexport var box___5Eaxt = \"PlasmicFaq-module--box___5Eaxt--3KfeF\";\nexport var box__xfa6K = \"PlasmicFaq-module--box__xfa6K--3RKIU\";\nexport var slotChildren = \"PlasmicFaq-module--slotChildren--QdhdI\";\nexport var slotSlot = \"PlasmicFaq-module--slotSlot--3jldM\";\nexport var svg__z1VCg = \"PlasmicFaq-module--svg__z1VCg--1OSdz\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicFaq } from \"./plasmic/simple_light_landing_page/PlasmicFaq\"\n\nfunction Faq(props) {\n  // Use PlasmicFaq to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicFaq are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all FaqProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicFaq {...props} />\n}\n\nexport default Faq\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicPricing-module--root--rcns1\";\nexport var box__kRBjL = \"PlasmicPricing-module--box__kRBjL--D1-s8\";\nexport var header = \"PlasmicPricing-module--header--arUMc\";\nexport var section__fMhyy = \"PlasmicPricing-module--section__fMhyy--1GfRq\";\nexport var box___3XQr = \"PlasmicPricing-module--box___3XQr--2bsvi\";\nexport var plan__cDp3V = \"PlasmicPricing-module--plan__cDp3V--2-46Q\";\nexport var box__qzuZp = \"PlasmicPricing-module--box__qzuZp--20ik0\";\nexport var box__fbsIv = \"PlasmicPricing-module--box__fbsIv--3k-qM\";\nexport var bullet___1XkFs = \"PlasmicPricing-module--bullet___1XkFs--1pkly\";\nexport var bullet__o7YEv = \"PlasmicPricing-module--bullet__o7YEv--2SKkH\";\nexport var bullet__bhN1T = \"PlasmicPricing-module--bullet__bhN1T--103ID\";\nexport var plan__p0H0H = \"PlasmicPricing-module--plan__p0H0H--2I8j9\";\nexport var box__vGuuf = \"PlasmicPricing-module--box__vGuuf--1Lgi_\";\nexport var box__jB1Qj = \"PlasmicPricing-module--box__jB1Qj--6EQr7\";\nexport var bullet__uITfA = \"PlasmicPricing-module--bullet__uITfA--2gLgi\";\nexport var bullet__uwzgi = \"PlasmicPricing-module--bullet__uwzgi--1PvuY\";\nexport var bullet___9OVeN = \"PlasmicPricing-module--bullet___9OVeN--3YfYI\";\nexport var bullet__sa7N = \"PlasmicPricing-module--bullet__sa7N--1ebrd\";\nexport var plan__aiSwE = \"PlasmicPricing-module--plan__aiSwE--3N_r_\";\nexport var box__lFwGu = \"PlasmicPricing-module--box__lFwGu--_T6fX\";\nexport var box__nYsy4 = \"PlasmicPricing-module--box__nYsy4--6tQ2B\";\nexport var bullet__kbjVo = \"PlasmicPricing-module--bullet__kbjVo--YjDLh\";\nexport var bullet__rew7P = \"PlasmicPricing-module--bullet__rew7P--3TWWG\";\nexport var bullet__uEa2G = \"PlasmicPricing-module--bullet__uEa2G--27EMo\";\nexport var section__kPtnn = \"PlasmicPricing-module--section__kPtnn--3aoJ3\";\nexport var faq___7E9Fd = \"PlasmicPricing-module--faq___7E9Fd--3lMka\";\nexport var faq___1Yqso = \"PlasmicPricing-module--faq___1Yqso--17Omf\";\nexport var faq__k8AUp = \"PlasmicPricing-module--faq__k8AUp--Vf8u2\";\nexport var footer = \"PlasmicPricing-module--footer--k54-O\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: j5vejMQNKZgqgWtrVNkPjM\n// Component: gly_cA7BLyF4IZ\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: 9_QMMsDzHkK8t/component\nimport Section from \"../../Section\" // plasmic-import: arjRm_Ettb_1m/component\nimport Plan from \"../../Plan\" // plasmic-import: IOeU_a7_G01jmo/component\nimport Bullet from \"../../Bullet\" // plasmic-import: BdWMeaFQYwVmJ2/component\nimport LinkButton from \"../../LinkButton\" // plasmic-import: ncDRo3MeKjAtr/component\nimport Faq from \"../../Faq\" // plasmic-import: -5lw5HDpGbQ5Lb/component\nimport Footer from \"../../Footer\" // plasmic-import: YsXcclOU3PBMx/component\nimport { useScreenVariants } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: 1nNjFIJzPrDqmC/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as defaultcss from \"../plasmic__default_style.module.css\" // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: j5vejMQNKZgqgWtrVNkPjM/projectcss\nimport * as sty from \"./PlasmicPricing.module.css\" // plasmic-import: gly_cA7BLyF4IZ/css\n\nexport const PlasmicPricing__VariantProps = new Array()\n\nexport const PlasmicPricing__ArgProps = new Array()\n\nfunction PlasmicPricing__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariants(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={defaultcss.plasmic_page_wrapper}>\n        <div\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          className={classNames(\n            defaultcss.all,\n            projectcss.root_reset,\n            sty.root\n          )}\n        >\n          <p.Stack\n            as={\"div\"}\n            hasGap={true}\n            className={classNames(defaultcss.all, sty.box__kRBjL)}\n          >\n            <Header\n              data-plasmic-name={\"header\"}\n              data-plasmic-override={overrides.header}\n              className={classNames(\"__wab_instance\", sty.header)}\n            />\n\n            <Section\n              className={classNames(\"__wab_instance\", sty.section__fMhyy)}\n              subtitle={\n                <React.Fragment>\n                  <div\n                    className={classNames(\n                      defaultcss.all,\n                      defaultcss.__wab_text,\n                      sty.box__nikv9\n                    )}\n                  >\n                    {\n                      \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n                    }\n                  </div>\n\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(defaultcss.all, sty.box___3XQr)}\n                  >\n                    <Plan\n                      className={classNames(\"__wab_instance\", sty.plan__cDp3V)}\n                      price={\n                        <div\n                          className={classNames(\n                            defaultcss.all,\n                            defaultcss.__wab_text,\n                            sty.box__qzuZp\n                          )}\n                        >\n                          {\"$10\"}\n                        </div>\n                      }\n                    >\n                      <LinkButton text={\"Get started\"} type={\"outlineBlue\"} />\n                    </Plan>\n\n                    <Plan\n                      className={classNames(\"__wab_instance\", sty.plan__p0H0H)}\n                      description={\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(defaultcss.all, sty.box__jB1Qj)}\n                        >\n                          <Bullet\n                            className={classNames(\n                              \"__wab_instance\",\n                              sty.bullet__uITfA\n                            )}\n                          />\n\n                          <Bullet\n                            className={classNames(\n                              \"__wab_instance\",\n                              sty.bullet__uwzgi\n                            )}\n                          />\n\n                          <Bullet\n                            className={classNames(\n                              \"__wab_instance\",\n                              sty.bullet___9OVeN\n                            )}\n                          />\n\n                          <Bullet\n                            className={classNames(\n                              \"__wab_instance\",\n                              sty.bullet__sa7N\n                            )}\n                          />\n                        </p.Stack>\n                      }\n                      name={\"Team\"}\n                      price={\n                        <div\n                          className={classNames(\n                            defaultcss.all,\n                            defaultcss.__wab_text,\n                            sty.box__vGuuf\n                          )}\n                        >\n                          {\"$49\"}\n                        </div>\n                      }\n                    >\n                      <LinkButton text={\"Get started\"} type={\"solidBlue\"} />\n                    </Plan>\n\n                    <Plan\n                      className={classNames(\"__wab_instance\", sty.plan__aiSwE)}\n                      name={\"Enterprise\"}\n                      price={\n                        <div\n                          className={classNames(\n                            defaultcss.all,\n                            defaultcss.__wab_text,\n                            sty.box__lFwGu\n                          )}\n                        >\n                          {\"$199\"}\n                        </div>\n                      }\n                    >\n                      <LinkButton text={\"Contact us\"} type={\"outlineBlue\"} />\n                    </Plan>\n                  </p.Stack>\n                </React.Fragment>\n              }\n              title={\"Pricing\"}\n            />\n\n            <Section\n              className={classNames(\"__wab_instance\", sty.section__kPtnn)}\n              subtitle={\n                <React.Fragment>\n                  <div\n                    className={classNames(\n                      defaultcss.all,\n                      defaultcss.__wab_text,\n                      sty.box__kuDkD\n                    )}\n                  >\n                    {\n                      \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n                    }\n                  </div>\n\n                  <Faq\n                    className={classNames(\"__wab_instance\", sty.faq___7E9Fd)}\n                    slot={\n                      \"Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n                    }\n                  >\n                    {\"Are there long-term contracts?\"}\n                  </Faq>\n\n                  <Faq\n                    className={classNames(\"__wab_instance\", sty.faq___1Yqso)}\n                    slot={\n                      \"Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n                    }\n                  >\n                    {\"Can I add or remove licenses?\"}\n                  </Faq>\n\n                  <Faq\n                    className={classNames(\"__wab_instance\", sty.faq__k8AUp)}\n                    slot={\n                      \"Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n                    }\n                  >\n                    {\"Do you offer refunds?\"}\n                  </Faq>\n                </React.Fragment>\n              }\n              title={\"FAQ\"}\n            />\n\n            <Footer\n              data-plasmic-name={\"footer\"}\n              data-plasmic-override={overrides.footer}\n              className={classNames(\"__wab_instance\", sty.footer)}\n            />\n          </p.Stack>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"header\", \"footer\"],\n  header: [\"header\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicPricing__ArgProps,\n      internalVariantPropNames: PlasmicPricing__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicPricing__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicPricing\"\n  } else {\n    func.displayName = `PlasmicPricing.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicPricing = Object.assign(\n  // Top-level PlasmicPricing renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicPricing\n    internalVariantProps: PlasmicPricing__VariantProps,\n    internalArgProps: PlasmicPricing__ArgProps,\n  }\n)\n\nexport default PlasmicPricing\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicPricing } from \"../components/plasmic/simple_light_landing_page/PlasmicPricing\"\n\nfunction Pricing() {\n  // Use PlasmicPricing to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicPricing are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicPricing is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicPricing />\n}\n\nexport default Pricing\n"],"sourceRoot":""}