// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: j5vejMQNKZgqgWtrVNkPjM
// Component: gly_cA7BLyF4IZ
import * as React from "react"
import * as p from "@plasmicapp/react-web"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Header from "../../Header" // plasmic-import: 9_QMMsDzHkK8t/component
import Section from "../../Section" // plasmic-import: arjRm_Ettb_1m/component
import Plan from "../../Plan" // plasmic-import: IOeU_a7_G01jmo/component
import Bullet from "../../Bullet" // plasmic-import: BdWMeaFQYwVmJ2/component
import LinkButton from "../../LinkButton" // plasmic-import: ncDRo3MeKjAtr/component
import Faq from "../../Faq" // plasmic-import: -5lw5HDpGbQ5Lb/component
import Footer from "../../Footer" // plasmic-import: YsXcclOU3PBMx/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen" // plasmic-import: 1nNjFIJzPrDqmC/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light_landing_page.module.css" // plasmic-import: j5vejMQNKZgqgWtrVNkPjM/projectcss
import * as sty from "./PlasmicPricing.module.css" // plasmic-import: gly_cA7BLyF4IZ/css

export const PlasmicPricing__VariantProps = new Array()

export const PlasmicPricing__ArgProps = new Array()

function PlasmicPricing__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__kRBjL)}
          >
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />

            <Section
              className={classNames("__wab_instance", sty.section__fMhyy)}
              subtitle={
                <React.Fragment>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__nikv9
                    )}
                  >
                    {
                      "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box___3XQr)}
                  >
                    <Plan
                      className={classNames("__wab_instance", sty.plan__cDp3V)}
                      price={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__qzuZp
                          )}
                        >
                          {"$10"}
                        </div>
                      }
                    >
                      <LinkButton text={"Get started"} type={"outlineBlue"} />
                    </Plan>

                    <Plan
                      className={classNames("__wab_instance", sty.plan__p0H0H)}
                      description={
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.box__jB1Qj)}
                        >
                          <Bullet
                            className={classNames(
                              "__wab_instance",
                              sty.bullet__uITfA
                            )}
                          />

                          <Bullet
                            className={classNames(
                              "__wab_instance",
                              sty.bullet__uwzgi
                            )}
                          />

                          <Bullet
                            className={classNames(
                              "__wab_instance",
                              sty.bullet___9OVeN
                            )}
                          />

                          <Bullet
                            className={classNames(
                              "__wab_instance",
                              sty.bullet__sa7N
                            )}
                          />
                        </p.Stack>
                      }
                      name={"Team"}
                      price={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__vGuuf
                          )}
                        >
                          {"$49"}
                        </div>
                      }
                    >
                      <LinkButton text={"Get started"} type={"solidBlue"} />
                    </Plan>

                    <Plan
                      className={classNames("__wab_instance", sty.plan__aiSwE)}
                      name={"Enterprise"}
                      price={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__lFwGu
                          )}
                        >
                          {"$199"}
                        </div>
                      }
                    >
                      <LinkButton text={"Contact us"} type={"outlineBlue"} />
                    </Plan>
                  </p.Stack>
                </React.Fragment>
              }
              title={"Pricing"}
            />

            <Section
              className={classNames("__wab_instance", sty.section__kPtnn)}
              subtitle={
                <React.Fragment>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__kuDkD
                    )}
                  >
                    {
                      "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  </div>

                  <Faq
                    className={classNames("__wab_instance", sty.faq___7E9Fd)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Are there long-term contracts?"}
                  </Faq>

                  <Faq
                    className={classNames("__wab_instance", sty.faq___1Yqso)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Can I add or remove licenses?"}
                  </Faq>

                  <Faq
                    className={classNames("__wab_instance", sty.faq__k8AUp)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Do you offer refunds?"}
                  </Faq>
                </React.Fragment>
              }
              title={"FAQ"}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: ["root", "header", "footer"],
  header: ["header"],
  footer: ["footer"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricing__ArgProps,
      internalVariantPropNames: PlasmicPricing__VariantProps,
    })

    const { dataFetches } = props
    return PlasmicPricing__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicPricing"
  } else {
    func.displayName = `PlasmicPricing.${nodeName}`
  }
  return func
}

export const PlasmicPricing = Object.assign(
  // Top-level PlasmicPricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicPricing
    internalVariantProps: PlasmicPricing__VariantProps,
    internalArgProps: PlasmicPricing__ArgProps,
  }
)

export default PlasmicPricing
/* prettier-ignore-end */
